{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut, onAuthStateChanged } from \"firebase/auth\";\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nconst auth = getAuth();\nexport async function login() {\n  return signInWithPopup(auth, provider).then(result => {\n    const user = result.user;\n    console.log(user);\n    return user;\n  }).catch(error => {\n    console.error(error);\n  });\n}\nexport async function logout() {\n  return signOut(auth).then(() =>\n  // Sign-out successful.\n  null).catch(error => {\n    // An error happened.\n  });\n}\nexport function onUserStateChange(callback) {\n  // callback 함수를 받아옴\n  onAuthStateChanged(auth, user => {\n    // 전달받은 콜백함수 호출\n    callback(user);\n  });\n}","map":{"version":3,"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","signOut","onAuthStateChanged","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DB_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","app","provider","auth","login","then","result","user","console","log","catch","error","logout","onUserStateChange","callback"],"sources":["/Users/jiu/Desktop/Projects/react-bulletinboard/front-board/src/api/firebase.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut, onAuthStateChanged } from \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nconst auth = getAuth();\n\nexport async function login() {\n  return signInWithPopup(auth, provider)\n    .then((result) => {\n      const user = result.user;\n      console.log(user);\n      return user;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n}\n\nexport async function logout() {\n  return signOut(auth)\n    .then(\n      () =>\n        // Sign-out successful.\n        null\n    )\n    .catch((error) => {\n      // An error happened.\n    });\n}\n\nexport function onUserStateChange(callback) {\n  // callback 함수를 받아옴\n  onAuthStateChanged(auth, (user) => {\n    // 전달받은 콜백함수 호출\n    callback(user);\n  });\n}"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,eAAe,EAAEC,kBAAkB,EAAEC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AAEzG,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B;EAC9CC,UAAU,EAAEH,OAAO,CAACC,GAAG,CAACG,8BAA8B;EACtDC,WAAW,EAAEL,OAAO,CAACC,GAAG,CAACK,yBAAyB;EAClDC,SAAS,EAAEP,OAAO,CAACC,GAAG,CAACO;AACzB,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGjB,aAAa,CAACM,cAAc,CAAC;AACzC,MAAMY,QAAQ,GAAG,IAAIf,kBAAkB,EAAE;AACzC,MAAMgB,IAAI,GAAGlB,OAAO,EAAE;AAEtB,OAAO,eAAemB,KAAK,GAAG;EAC5B,OAAOlB,eAAe,CAACiB,IAAI,EAAED,QAAQ,CAAC,CACnCG,IAAI,CAAEC,MAAM,IAAK;IAChB,MAAMC,IAAI,GAAGD,MAAM,CAACC,IAAI;IACxBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,OAAOA,IAAI;EACb,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;IAChBH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;EACtB,CAAC,CAAC;AACN;AAEA,OAAO,eAAeC,MAAM,GAAG;EAC7B,OAAOxB,OAAO,CAACe,IAAI,CAAC,CACjBE,IAAI,CACH;EACE;EACA,IAAI,CACP,CACAK,KAAK,CAAEC,KAAK,IAAK;IAChB;EAAA,CACD,CAAC;AACN;AAEA,OAAO,SAASE,iBAAiB,CAACC,QAAQ,EAAE;EAC1C;EACAzB,kBAAkB,CAACc,IAAI,EAAGI,IAAI,IAAK;IACjC;IACAO,QAAQ,CAACP,IAAI,CAAC;EAChB,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}